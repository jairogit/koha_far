.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "opac::oai 3"
.TH opac::oai 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::OAI::Repository \- Handles OAI\-PMH requests for a Koha database.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use C4::OAI::Repository;
\&
\&  my $repository = C4::OAI::Repository\->new();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This object extend HTTP::OAI::Repository object.
It accepts OAI-PMH \s-1HTTP\s0 requests and returns result.
.PP
This OAI-PMH server can operate in a simple mode and extended one.
.PP
In simple mode, repository configuration comes entirely from Koha system
preferences (OAI\-PMH:archiveID and OAI\-PMH:MaxCount) and the server returns
records in marcxml or dublin core format. Dublin core records are created from
koha marcxml records tranformed with \s-1XSLT\s0. Used \s-1XSL\s0 file is located in
koha\-tmpl/intranet\-tmpl/prog/en/xslt directory and choosed based on marcflavour,
respecively MARC21slim2OAIDC.xsl for \s-1MARC21\s0 and  MARC21slim2OAIDC.xsl for
\&\s-1UNIMARC\s0.
.PP
In extende mode, it's possible to parameter other format than marcxml or Dublin
Core. A new syspref OAI\-PMH:ConfFile specify a \s-1YAML\s0 configuration file which
list available metadata formats and \s-1XSL\s0 file used to create them from marcxml
records. If this syspref isn't set, Koha \s-1OAI\s0 server works in simple mode. A
configuration file koha\-oai.conf can look like that:
.PP
.Vb 10
\&  \-\-\-
\&  format:
\&    vs:
\&      metadataPrefix: vs
\&      metadataNamespace: http://veryspecial.tamil.fr/vs/format\-pivot/1.1/vs
\&      schema: http://veryspecial.tamil.fr/vs/format\-pivot/1.1/vs.xsd
\&      xsl_file: /usr/local/koha/xslt/vs.xsl
\&    marcxml:
\&      metadataPrefix: marxml
\&      metadataNamespace: http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim
\&      schema: http://www.loc.gov/MARC21/slim http://www.loc.gov/standards/marcxml/schema/MARC21slim.xsd
\&    oai_dc:
\&      metadataPrefix: oai_dc
\&      metadataNamespace: http://www.openarchives.org/OAI/2.0/oai_dc/
\&      schema: http://www.openarchives.org/OAI/2.0/oai_dc.xsd
\&      xsl_file: /usr/local/koha/koha\-tmpl/intranet\-tmpl/xslt/UNIMARCslim2OAIDC.xsl
.Ve
