.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::ClassSource 3"
.TH C4::ClassSource 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::ClassSources \- handle classification sources in Koha
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use C4::ClassSource;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module deals with manipulating classification
sources and sorting rules.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "GetClassSources"
.IX Subsection "GetClassSources"
.Vb 1
\&  my $sources = GetClassSources();
\&
\&  Returns reference to hash of references to
\&  the class sources, keyed on cn_source.
.Ve
.PP
\fIExample\fR
.IX Subsection "Example"
.PP
my \f(CW$sources\fR = \fIGetClassSources()\fR;
my \f(CW@sources\fR = ();
foreach my \f(CW$cn_source\fR (sort keys %$sources) {
    my \f(CW$source\fR = \f(CW$sources\fR\->{$cn_source};
    push \f(CW@sources\fR, 
      {  
        code        => \f(CW$source\fR\->{'cn_source'},
        description => \f(CW$source\fR\->{'description'},
        used => \f(CW$source\fR\->{'used'},
        sortrule    => \f(CW$source\fR\->{'class_sort_rule'}
      } 
}
.SS "AddClassSource"
.IX Subsection "AddClassSource"
.Vb 1
\&  AddClassSource($cn_source, $description, $used, $class_sort_rule);
\&
\&  Adds a class_sources row.
.Ve
.SS "GetClassSource"
.IX Subsection "GetClassSource"
.Vb 1
\&  my $hashref = GetClassSource($cn_source);
\&
\&  Retrieves a class_sources row by cn_source.
.Ve
.SS "ModClassSource"
.IX Subsection "ModClassSource"
.Vb 1
\&  ModClassSource($cn_source, $description, $used, $class_sort_rule);
\&
\&  Updates a class_sources row.
.Ve
.SS "DelClassSource"
.IX Subsection "DelClassSource"
.Vb 1
\&  DelClassSource($cn_source);
\&
\&  Deletes class_sources row.
.Ve
.SS "GetClassSortRules"
.IX Subsection "GetClassSortRules"
.Vb 1
\&  my $sort_rules = GetClassSortRules();
.Ve
.PP
Returns reference to hash of references to
the class sorting rules, keyed on class_sort_rule
.PP
\fIExample\fR
.IX Subsection "Example"
.PP
.Vb 11
\&  my $sort_rules = GetClassSortRules();
\&  my @sort_rules = ();
\&  foreach my $sort_rule (sort keys %$sort_rules) {
\&      my $sort_rule = $sort_rules\->{$sort_rule};
\&      push @sort_rules,
\&          {
\&          rule        => $sort_rule\->{\*(Aqclass_sort_rule\*(Aq},
\&          description => $sort_rule\->{\*(Aqdescription\*(Aq},
\&          sort_routine    => $sort_rule\->{\*(Aqsort_routine\*(Aq}
\&      }
\&   }
.Ve
.SS "AddClassSortRule"
.IX Subsection "AddClassSortRule"
.Vb 1
\&  AddClassSortRule($class_sort_rule, $description, $sort_routine);
\&
\&  Adds a class_sort_rules row.
.Ve
.SS "GetClassSortRule"
.IX Subsection "GetClassSortRule"
.Vb 1
\&  my $hashref = GetClassSortRule($class_sort_rule);
\&
\&  Retrieves a class_sort_rules row by class_sort_rule.
.Ve
.SS "ModClassSortRule"
.IX Subsection "ModClassSortRule"
.Vb 1
\&  ModClassSortRule($class_sort_rule, $description, $sort_routine);
\&
\&  Updates a class_sort_rules row.
.Ve
.SS "DelClassSortRule"
.IX Subsection "DelClassSortRule"
.Vb 1
\&  DelClassSortRule($class_sort_rule);
\&
\&  Deletes class_sort_rules row.
.Ve
.SS "GetSourcesForSortRule"
.IX Subsection "GetSourcesForSortRule"
.Vb 1
\&  my @source = GetSourcesForSortRule($class_sort_rule);
\&
\&  Retrieves an array class_source.cn_rule for each source
\&  that uses the supplied $class_sort_rule.
.Ve
.SS "GetClassSort"
.IX Subsection "GetClassSort"
.Vb 1
\&  my $cn_sort = GetClassSort($cn_source, $cn_class, $cn_item);
.Ve
.PP
Get the sort key corresponding to the classification part and item part
and the defined call number source.
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team <http://koha\-community.org/>
