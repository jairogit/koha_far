.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::Output 3"
.TH C4::Output 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Output \- Functions for managing output, is slowly being deprecated
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.IP "FormatData" 2
.IX Item "FormatData"
FormatData($data_hashref)
\&\f(CW$data_hashref\fR is a ref to data to format
.Sp
Format dates of data those dates are assumed to contain date in their noun
Could be used in order to centralize all the formatting for \s-1HTML\s0 output
.IP "pagination_bar" 2
.IX Item "pagination_bar"
.Vb 1
\&   pagination_bar($base_url, $nb_pages, $current_page, $startfrom_name)
.Ve
.Sp
Build an \s-1HTML\s0 pagination bar based on the number of page to display, the
current page and the url to give to each page link.
.Sp
\&\f(CW$base_url\fR is the \s-1URL\s0 for each page link. The
\&\f(CW$startfrom_name\fR=page_number is added at the end of the each \s-1URL\s0.
.Sp
\&\f(CW$nb_pages\fR is the total number of pages available.
.Sp
\&\f(CW$current_page\fR is the current page number. This page number won't become a
link.
.Sp
This function returns \s-1HTML\s0, without any language dependency.
.IP "output_with_http_headers" 2
.IX Item "output_with_http_headers"
.Vb 1
\&   &output_with_http_headers($query, $cookie, $data, $content_type[, $status[, $extra_options]])
.Ve
.Sp
Outputs \f(CW$data\fR with the appropriate \s-1HTTP\s0 headers,
the authentication cookie \f(CW$cookie\fR and a Content-Type specified in
\&\f(CW$content_type\fR.
.Sp
If applicable, \f(CW$cookie\fR can be undef, and it will not be sent.
.Sp
\&\f(CW$content_type\fR is one of the following: 'html', 'js', 'json', 'xml', 'rss', or 'atom'.
.Sp
\&\f(CW$status\fR is an \s-1HTTP\s0 status message, like '403 Authentication Required'. It defaults to '200 \s-1OK\s0'.
.Sp
\&\f(CW$extra_options\fR is hashref.  If the key 'force_no_caching' is present and has
a true value, the \s-1HTTP\s0 headers include directives to force there to be no
caching whatsoever.
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Development Team <http://koha\-community.org/>
