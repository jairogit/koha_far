.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::Review 3"
.TH C4::Review 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Review \- Perl Module containing routines for dealing with reviews of items
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use C4::Review;
\&
\&  my $review=getreview($biblionumber,$borrowernumber);
\&  savereview($biblionumber,$borrowernumber,$review);
\&  updatereview($biblionumber,$borrowernumber,$review);
\&  my $count=numberofreviews($status);
\&  my $count=numberofreviewsbybiblionumber($biblionumber);
\&  my $reviews=getreviews($biblionumber);
\&  my $reviews=getallreviews($status);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Review.pm provides many routines for manipulating reviews.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "getreview"
.IX Subsection "getreview"
.Vb 1
\&  $review = getreview($biblionumber,$borrowernumber);
.Ve
.PP
Takes a borrowernumber and a biblionumber and returns the review of that biblio
.SS "approvereview"
.IX Subsection "approvereview"
.Vb 1
\&  approvereview($reviewid);
.Ve
.PP
Takes a reviewid and marks that review approved
.SS "unapprovereview"
.IX Subsection "unapprovereview"
.Vb 1
\&  unapprovereview($reviewid);
.Ve
.PP
Takes a reviewid and marks that review as not approved
.SS "deletereview"
.IX Subsection "deletereview"
.Vb 1
\&  deletereview($reviewid);
.Ve
.PP
Takes a reviewid and deletes it
.SH "AUTHOR"
.IX Header "AUTHOR"
Koha Team
