.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::Accounts 3"
.TH C4::Accounts 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Accounts \- Functions for dealing with Koha accounts
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use C4::Accounts;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The functions in this module deal with the monetary aspect of Koha,
including looking up and modifying the amount of money owed by a
patron.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "recordpayment"
.IX Subsection "recordpayment"
.Vb 1
\&  &recordpayment($borrowernumber, $payment, $sip_paytype, $note);
.Ve
.PP
Record payment by a patron. \f(CW$borrowernumber\fR is the patron's
borrower number. \f(CW$payment\fR is a floating-point number, giving the
amount that was paid. \f(CW$sip_paytype\fR is an optional flag to indicate this
payment was made over a \s-1SIP2\s0 interface, rather than the staff client. The
value passed is the \s-1SIP2\s0 payment type value (message 37, characters 21\-22)
.PP
Amounts owed are paid off oldest first. That is, if the patron has a
\&\f(CW$1\fR fine from Feb. 1, another \f(CW$1\fR fine from Mar. 1, and makes a payment
of \f(CW$1\fR.50, then the oldest fine will be paid off in full, and \f(CW$0\fR.50
will be credited to the next one.
.SS "makepayment"
.IX Subsection "makepayment"
.Vb 1
\&  &makepayment($accountlines_id, $borrowernumber, $acctnumber, $amount, $branchcode);
.Ve
.PP
Records the fact that a patron has paid off the entire amount he or
she owes.
.PP
\&\f(CW$borrowernumber\fR is the patron's borrower number. \f(CW$acctnumber\fR is
the account that was credited. \f(CW$amount\fR is the amount paid (this is
only used to record the payment. It is assumed to be equal to the
amount owed). \f(CW$branchcode\fR is the code of the branch where payment
was made.
.SS "getnextacctno"
.IX Subsection "getnextacctno"
.Vb 1
\&  $nextacct = &getnextacctno($borrowernumber);
.Ve
.PP
Returns the next unused account number for the patron with the given
borrower number.
.SS "fixaccounts (removed)"
.IX Subsection "fixaccounts (removed)"
.Vb 1
\&  &fixaccounts($accountlines_id, $borrowernumber, $accountnumber, $amount);
.Ve
.PP
#'
# \s-1FIXME\s0 \- I don't understand what this function does.
sub fixaccounts {
    my ( \f(CW$accountlines_id\fR, \f(CW$borrowernumber\fR, \f(CW$accountno\fR, \f(CW$amount\fR ) = \f(CW@_\fR;
    my \f(CW$dbh\fR = C4::Context\->dbh;
    my \f(CW$sth\fR = \f(CW$dbh\fR\->prepare(
        \*(L"\s-1SELECT\s0 * \s-1FROM\s0 accountlines \s-1WHERE\s0 accountlines_id=?\*(R"
    );
    \f(CW$sth\fR\->execute( \f(CW$accountlines_id\fR );
    my \f(CW$data\fR = \f(CW$sth\fR\->fetchrow_hashref;
.PP
.Vb 4
\&    # FIXME \- Error\-checking
\&    my $diff        = $amount \- $data\->{\*(Aqamount\*(Aq};
\&    my $outstanding = $data\->{\*(Aqamountoutstanding\*(Aq} + $diff;
\&    $sth\->finish;
\&
\&    $dbh\->do(<<EOT);
\&        UPDATE  accountlines
\&        SET     amount = \*(Aq$amount\*(Aq,
\&                amountoutstanding = \*(Aq$outstanding\*(Aq
\&        WHERE   accountlines_id = $accountlines_id
\&EOT
\&        # FIXME: exceedingly bad form.  Use prepare with placholders ("?") in query and execute args.
\&}
.Ve
.SS "manualinvoice"
.IX Subsection "manualinvoice"
.Vb 2
\&  &manualinvoice($borrowernumber, $itemnumber, $description, $type,
\&                 $amount, $note);
.Ve
.PP
\&\f(CW$borrowernumber\fR is the patron's borrower number.
\&\f(CW$description\fR is a description of the transaction.
\&\f(CW$type\fR may be one of \f(CW\*(C`CS\*(C'\fR, \f(CW\*(C`CB\*(C'\fR, \f(CW\*(C`CW\*(C'\fR, \f(CW\*(C`CF\*(C'\fR, \f(CW\*(C`CL\*(C'\fR, \f(CW\*(C`N\*(C'\fR, \f(CW\*(C`L\*(C'\fR,
or \f(CW\*(C`REF\*(C'\fR.
\&\f(CW$itemnumber\fR is the item involved, if pertinent; otherwise, it
should be the empty string.
.SS "recordpayment_selectaccts"
.IX Subsection "recordpayment_selectaccts"
.Vb 1
\&  recordpayment_selectaccts($borrowernumber, $payment,$accts);
.Ve
.PP
Record payment by a patron. \f(CW$borrowernumber\fR is the patron's
borrower number. \f(CW$payment\fR is a floating-point number, giving the
amount that was paid. \f(CW$accts\fR is an array ref to a list of
accountnos which the payment can be recorded against
.PP
Amounts owed are paid off oldest first. That is, if the patron has a
\&\f(CW$1\fR fine from Feb. 1, another \f(CW$1\fR fine from Mar. 1, and makes a payment
of \f(CW$1\fR.50, then the oldest fine will be paid off in full, and \f(CW$0\fR.50
will be credited to the next one.
.SS "WriteOffFee"
.IX Subsection "WriteOffFee"
.Vb 1
\&  WriteOffFee( $borrowernumber, $accountline_id, $itemnum, $accounttype, $amount, $branch, $payment_note );
.Ve
.PP
Write off a fine for a patron.
\&\f(CW$borrowernumber\fR is the patron's borrower number.
\&\f(CW$accountline_id\fR is the accountline_id of the fee to write off.
\&\f(CW$itemnum\fR is the itemnumber of of item whose fine is being written off.
\&\f(CW$accounttype\fR is the account type of the fine being written off.
\&\f(CW$amount\fR is a floating-point number, giving the amount that is being written off.
\&\f(CW$branch\fR is the branchcode of the library where the writeoff occurred.
\&\f(CW$payment_note\fR is the note to attach to this payment
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1\fIDBI\s0\fR\|(3)
