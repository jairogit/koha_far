.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "misc::maintenance::MARC21_utf8_flag_fix 3"
.TH misc::maintenance::MARC21_utf8_flag_fix 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MARC21_utf8_flag_fix.pl \- Repair missing leader position 9 value ("a" for MARC21 \- UTF8).
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
MARC21_utf8_flag_fix.pl [ \-h | \-m ] [ \-v ] [ \-d ] [ \-s ] [ \-l N ] [ \-o N ] [ \-f ]
.PP
.Vb 4
\& Help Options:
\&   \-h \-\-help \-?   Brief help message
\&   \-m \-\-man       Full documentation, same as \-\-help \-\-verbose
\&      \-\-version   Prints version info
\&
\& Feedback Options:
\&   \-d \-\-dump      Dump MARCXML of biblioitems processed, default OFF
\&   \-s \-\-summary   Print initial summary of good and bad biblioitems counted, default ON
\&   \-v \-\-verbose   Increase verbosity of output, default OFF
\&
\& Run Options:
\&   \-f \-\-fix       Save repaired leaders to biblioitems.marcxml, 
\&   \-l \-\-limit     Number of biblioitems to display or fix
\&   \-o \-\-offset    Number of biblioitems to skip (not displayed or fixed)
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-fix\fR" 8
.IX Item "--fix"
This is the most important option.  Without it, the script just tells you about the problem records.
With \-\-fix, the script fixes the same records.
.IP "\fB\-\-limit=N\fR" 8
.IX Item "--limit=N"
Like a \s-1LIMIT\s0 statement in \s-1SQL\s0, this constrains the number of records targeted by the script to an integer N.  
The default is to target all records with bad leaders.
.IP "\fB\-\-offset=N\fR" 8
.IX Item "--offset=N"
Like an \s-1OFFSET\s0 statement in \s-1SQL\s0, this tells the script to skip N of the targetted records.
The default is 0, i.e. skip none of them.
.PP
The binary \s-1ON/OFF\s0 options can be negated like:
   \fB\-\-nosummary\fR   Do not display summary.
   \fB\-\-nodump\fR      Do not dump \s-1MARCXML\s0.
   \fB\-\-nofix\fR       Do not change any records.  This is the default mode.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Koha expects to have all \s-1MARXML\s0 records internalized in \s-1UTF\-8\s0 encoding.  This 
presents a problem when records have been inserted with the leader/09 showing
blank for \s-1MARC8\s0 encoding.  This script is used to determine the extent of the 
problem and to fix the affected leaders.
.PP
As the name suggests, this script is only useful for \s-1MARC21\s0 and will die for marcflavour \s-1UNIMARC\s0.
.PP
Run MARC21_utf8_flag_fix.pl the first time with no options, and assuming you agree that the leaders
presented need fixing, run it again with \fB\-\-fix\fR.
.SH "USAGE EXAMPLES"
.IX Header "USAGE EXAMPLES"
\&\fBMARC21_utf8_flag_fix.pl\fR
.PP
In the most basic form, displays summary of biblioitems examined
and the leader from any found without /09 = a.
.PP
\&\fBMARC21_utf8_flag_fix.pl \-\-fix\fR
.PP
Fixes the same biblioitems, displaying summary and each leader before/after change.
.PP
\&\fBMARC21_utf8_flag_fix.pl \-\-limit=3 \-\-offset=15 \-\-nosummary \-\-dump\fR
.PP
Dumps \s-1MARCXML\s0 from the 16th, 17th and 18th bad records found.
.PP
\&\fBMARC21_utf8_flag_fix.pl \-l 3 \-o 15 \-s 0 \-d\fR
.PP
Same thing as previous example in terse form.
.SH "TO DO"
.IX Header "TO DO"
Allow biblionumbers to be piped into \s-1STDIN\s0 as the selection mechanism.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
C4::Biblio
