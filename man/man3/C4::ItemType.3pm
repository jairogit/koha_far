.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::ItemType 3"
.TH C4::ItemType 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::ItemType \- objects from the itemtypes table
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use C4::ItemType;
\&    my @itemtypes = C4::ItemType\->all;
\&    print join("\en", map { $_\->description } @itemtypes), "\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Objects of this class represent a row in the \f(CW\*(C`itemtypes\*(C'\fR table.
.PP
Currently, the bare minimum for using this as a read-only data source has
been implemented.  The \s-1API\s0 was designed to make it easy to transition to
an \s-1ORM\s0 later on.
.SH "API"
.IX Header "API"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fIC4::ItemType\->new(\e%opts)\fR
.IX Subsection "C4::ItemType->new(%opts)"
.PP
Given a hashref, a new (in-memory) C4::ItemType object will be instantiated.
The database is not touched.
.PP
\fIC4::ItemType\->all\fR
.IX Subsection "C4::ItemType->all"
.PP
This returns all the itemtypes as objects.  By default they're ordered by
\&\f(CW\*(C`description\*(C'\fR.
.PP
\fIC4::ItemType\->get\fR
.IX Subsection "C4::ItemType->get"
.PP
Return the itemtype indicated by the itemtype given as argument, as
an object.
.SS "Object Methods"
.IX Subsection "Object Methods"
These are read-only accessors for attributes of a C4::ItemType object.
.PP
\fI\f(CI$itemtype\fI\->itemtype\fR
.IX Subsection "$itemtype->itemtype"
.PP
\fI\f(CI$itemtype\fI\->description\fR
.IX Subsection "$itemtype->description"
.PP
\fI\f(CI$itemtype\fI\->renewalsallowed\fR
.IX Subsection "$itemtype->renewalsallowed"
.PP
\fI\f(CI$itemtype\fI\->rentalcharge\fR
.IX Subsection "$itemtype->rentalcharge"
.PP
\fI\f(CI$itemtype\fI\->notforloan\fR
.IX Subsection "$itemtype->notforloan"
.PP
\fI\f(CI$itemtype\fI\->imageurl\fR
.IX Subsection "$itemtype->imageurl"
.PP
\fI\f(CI$itemtype\fI\->checkinmsg\fR
.IX Subsection "$itemtype->checkinmsg"
.PP
\fI\f(CI$itemtype\fI\->summary\fR
.IX Subsection "$itemtype->summary"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The following modules make reference to the \f(CW\*(C`itemtypes\*(C'\fR table.
.PP
C4::Biblio,
C4::Circulation,
C4::Context,
C4::Items,
C4::Koha,
C4::Labels,
C4::Overdues,
C4::Reserves,
C4::Search,
C4::VirtualShelves::Page,
C4::VirtualShelves,
C4::XSLT
.SH "AUTHOR"
.IX Header "AUTHOR"
John Beppu <john.beppu@liblime.com>
