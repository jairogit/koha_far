.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Koha::Schema::Result::ImportBatch 3"
.TH Koha::Schema::Result::ImportBatch 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Schema::Result::ImportBatch
.ie n .SH "TABLE: ""import_batches"""
.el .SH "TABLE: \f(CWimport_batches\fP"
.IX Header "TABLE: import_batches"
.SH "ACCESSORS"
.IX Header "ACCESSORS"
.SS "import_batch_id"
.IX Subsection "import_batch_id"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  is_auto_increment: 1
\&  is_nullable: 0
.Ve
.SS "matcher_id"
.IX Subsection "matcher_id"
.Vb 2
\&  data_type: \*(Aqinteger\*(Aq
\&  is_nullable: 1
.Ve
.SS "template_id"
.IX Subsection "template_id"
.Vb 2
\&  data_type: \*(Aqinteger\*(Aq
\&  is_nullable: 1
.Ve
.SS "branchcode"
.IX Subsection "branchcode"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 10
.Ve
.SS "num_records"
.IX Subsection "num_records"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.SS "num_items"
.IX Subsection "num_items"
.Vb 3
\&  data_type: \*(Aqinteger\*(Aq
\&  default_value: 0
\&  is_nullable: 0
.Ve
.SS "upload_timestamp"
.IX Subsection "upload_timestamp"
.Vb 4
\&  data_type: \*(Aqtimestamp\*(Aq
\&  datetime_undef_if_invalid: 1
\&  default_value: current_timestamp
\&  is_nullable: 0
.Ve
.SS "overlay_action"
.IX Subsection "overlay_action"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqcreate_new\*(Aq
\&  extra: {list => ["replace","create_new","use_template","ignore"]}
\&  is_nullable: 0
.Ve
.SS "nomatch_action"
.IX Subsection "nomatch_action"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqcreate_new\*(Aq
\&  extra: {list => ["create_new","ignore"]}
\&  is_nullable: 0
.Ve
.SS "item_action"
.IX Subsection "item_action"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqalways_add\*(Aq
\&  extra: {list => ["always_add","add_only_for_matches","add_only_for_new","ignore","replace"]}
\&  is_nullable: 0
.Ve
.SS "import_status"
.IX Subsection "import_status"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqstaging\*(Aq
\&  extra: {list => ["staging","staged","importing","imported","reverting","reverted","cleaned"]}
\&  is_nullable: 0
.Ve
.SS "batch_type"
.IX Subsection "batch_type"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqbatch\*(Aq
\&  extra: {list => ["batch","z3950","webservice"]}
\&  is_nullable: 0
.Ve
.SS "record_type"
.IX Subsection "record_type"
.Vb 4
\&  data_type: \*(Aqenum\*(Aq
\&  default_value: \*(Aqbiblio\*(Aq
\&  extra: {list => ["biblio","auth","holdings"]}
\&  is_nullable: 0
.Ve
.SS "file_name"
.IX Subsection "file_name"
.Vb 3
\&  data_type: \*(Aqvarchar\*(Aq
\&  is_nullable: 1
\&  size: 100
.Ve
.SS "comments"
.IX Subsection "comments"
.Vb 2
\&  data_type: \*(Aqmediumtext\*(Aq
\&  is_nullable: 1
.Ve
.SH "PRIMARY KEY"
.IX Header "PRIMARY KEY"
.IP "\(bu" 4
\&\*(L"import_batch_id\*(R"
.SH "RELATIONS"
.IX Header "RELATIONS"
.SS "import_records"
.IX Subsection "import_records"
Type: has_many
.PP
Related object: Koha::Schema::Result::ImportRecord
