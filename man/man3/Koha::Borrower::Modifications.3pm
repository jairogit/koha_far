.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Koha::Borrower::Modifications 3"
.TH Koha::Borrower::Modifications 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
C4::Borrowers::Modifications
.SS "AddModifications"
.IX Subsection "AddModifications"
Koha::Borrower::Modifications\->AddModifications( \f(CW$data\fR );
.PP
Adds or updates modifications for a borrower.
.PP
Requires either the key borrowernumber, or verification_token
to be part of the passed in hash.
.SS "Verify"
.IX Subsection "Verify"
\&\f(CW$verified\fR = Koha::Borrower::Modifications\->Verify( \f(CW$verification_token\fR );
.PP
Returns true if the passed in token is valid.
.SS "GetPendingModificationsCount"
.IX Subsection "GetPendingModificationsCount"
\&\f(CW$count\fR = Koha::Borrower::Modifications\->\fIGetPendingModificationsCount()\fR;
.PP
Returns the number of pending modifications for existing borrowers.
.SS "GetPendingModifications"
.IX Subsection "GetPendingModifications"
\&\f(CW$arrayref\fR = Koha::Borrower::Modifications\->\fIGetPendingModifications()\fR;
.PP
Returns an arrayref of hashrefs for all pending modifications for existing borrowers.
.SS "ApproveModifications"
.IX Subsection "ApproveModifications"
Koha::Borrower::Modifications\->ApproveModifications( \f(CW$borrowernumber\fR );
.PP
Commits the pending modifications to the borrower record and removes
them from the modifications table.
.SS "DenyModifications"
.IX Subsection "DenyModifications"
Koha::Borrower::Modifications\->DenyModifications( \f(CW$borrowernumber\fR );
.PP
Removes the modifications from the table for the given borrower,
without commiting the changes to the borrower record.
.SS "DelModifications"
.IX Subsection "DelModifications"
Koha::Borrower::Modifications\->DelModifications({
  [ borrowernumber => \f(CW$borrowernumber\fR ],
  [ verification_token => \f(CW$verification_token\fR ]
});
.PP
Deletes the modifications for the given borrowernumber or verification token.
.SS "GetModifications"
.IX Subsection "GetModifications"
\&\f(CW$hashref\fR = Koha::Borrower::Modifications\->GetModifications({
  [ borrowernumber => \f(CW$borrowernumber\fR ],
  [ verification_token => \f(CW$verification_token\fR ]
});
.PP
Gets the modifications for the given borrowernumber or verification token.
