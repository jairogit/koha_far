.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "C4::VirtualShelves::Page 3"
.TH C4::VirtualShelves::Page 3 "2015-11-02" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
VirtualShelves/Page.pm
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Module used for both \s-1OPAC\s0 and intranet pages.
.SH "CGI PARAMETERS"
.IX Header "CGI PARAMETERS"
.ie n .IP """modifyshelfcontents""" 4
.el .IP "\f(CWmodifyshelfcontents\fR" 4
.IX Item "modifyshelfcontents"
If this script has to modify the shelf content.
.ie n .IP """shelfnumber""" 4
.el .IP "\f(CWshelfnumber\fR" 4
.IX Item "shelfnumber"
To know on which shelf to work.
.ie n .IP """addbarcode""" 4
.el .IP "\f(CWaddbarcode\fR" 4
.IX Item "addbarcode"
.PD 0
.ie n .IP """op""" 4
.el .IP "\f(CWop\fR" 4
.IX Item "op"
.PD
.Vb 3
\& Op can be:
\&    * modif: show the template allowing modification of the shelves;
\&    * modifsave: save changes from modif mode.
.Ve
.ie n .IP """viewshelf""" 4
.el .IP "\f(CWviewshelf\fR" 4
.IX Item "viewshelf"
Load template with 'viewshelves param' displaying the shelf's information.
.ie n .IP """shelves""" 4
.el .IP "\f(CWshelves\fR" 4
.IX Item "shelves"
If the param shelves == 1, then add or delete a shelf.
.ie n .IP """addshelf""" 4
.el .IP "\f(CWaddshelf\fR" 4
.IX Item "addshelf"
If the param shelves == 1, then addshelf is the name of the shelf to add.
